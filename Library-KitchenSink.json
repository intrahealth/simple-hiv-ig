{
  "resourceType": "Library",
  "id": "KitchenSink",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><h2>Contents</h2><p><code>text/cql</code></p><pre><code class=\"language-sql\">library KitchenSink version '0.1.0'\n\nusing FHIR version '4.0.1'\n\ninclude FHIRHelpers version '4.0.1'\ninclude FHIRCommon version '4.0.1' called FC\ninclude AgeRanges version '0.1.0' called AR\n\n// SNOMED-CT, International Edition\ncodesystem \"SNOMED-CT\": 'http://snomed.info/sct' version 'http://snomed.info/sct/900000000000207008'\n// LOINC, 2.63+\ncodesystem \"LOINC\": 'http://loinc.org'\n\n// ConditionOnset: HIV infection, this conflicts with test result, so is be renamed\ncode \"HIV Condition Positive\": '86406008' from \"SNOMED-CT\" display 'HIV Positive'\ncode \"HIV 1 and 2 tests - Meaningful Use set\": '75622-1' from \"LOINC\" display 'HIV 1 and 2 tests - Meaningful Use set'\ncode \"Pregnant (finding)\": '77386006' from \"SNOMED-CT\" display 'Pregnant (finding)'\ncode \"HIV 1 RNA NAA+probe (Specimen)\": '25836-8' from \"LOINC\" display 'HIV 1 RNA NAA+probe (Specimen)'\n\ncontext Patient\n\ndefine \"Sex\":\n  Patient.gender\n\ndefine \"Sex Value\":\n  Patient.gender.value\n\ndefine \"Female\":\n  Patient.gender = 'female'\n\ndefine \"Male\":\n  Patient.gender = 'male'\n\ndefine \"Age Group/Sex\":\n  AR.\"Age Group\".code + ':' + \"Sex\"\n\n\ndefine \"Initial Population\":\n  true\n\ndefine \"Denominator\":\n  \"Sex\" is not null\n\ndefine \"Numerator\":\n  \"Sex\" = 'female'\n\ndefine \"Hello, World!\":\n  'Hello, World!'\n\n/* define \"birthDate\": Patient.birthDate */\ndefine \"birthDate_str\":\n  ToString(Patient.birthDate)\n\n/* define \"Given Name str\": Patient.name.given[0] */\ndefine \"Given Name\":\n  Patient.name.given[0].value\n\n/* define \"Family Name str\": Patient.name.family[0] */\ndefine \"Family Name\":\n  Patient.name.family[0].value\n\n// works in fsh\ndefine \"HIV Condition\":\n  exists [\"Condition\": \"HIV Condition Positive\"]\n\ndefine \"Is HIV Positive\":\n  \"HIV Condition\"\n\ndefine \"Is HIV Negative\":\n  not \"HIV Condition\"\n\n\ndefine \"Pregnant\":\n  exists [\"Condition\": \"Pregnant (finding)\"]\n\ndefine \"Viral Load Test Result\":\n  [\"Observation\": \"HIV 1 RNA NAA+probe (Specimen)\"] Obs\n    where Obs.status = 'final'\n      and Obs.value is not null\n\n\ndefine \"HIV Test Exists\":\n  exists ([Observation: \"HIV 1 and 2 tests - Meaningful Use set\"])\n\ndefine \"HIV Positive Observation\":\n  [Observation: \"HIV 1 and 2 tests - Meaningful Use set\"] Observation\n    where Observation.value = \"Is HIV Positive\"\n\ndefine \"HIV Negative Observation\":\n  [Observation: \"HIV 1 and 2 tests - Meaningful Use set\"] Observation\n    where Observation.value = \"Is HIV Negative\"\n\n// always null\ndefine \"HIV Test Results\":\n  case\n    when \"Is HIV Positive\" then \"HIV Positive\"\n    when \"Is HIV Negative\" then \"HIV Negative\"\n    else null\n  end\n\n// always null\ndefine \"Age Group/Sex/HIV Test Results\":\n  AR.\"Age Group\".code + ':' + \"Sex\" + ':' + \"HIV Test Results\".code\n\n\n// synthea uses copies/mL but fsh uses {copies}/mL which is official\ndefine \"Living with HIV and on ART with suppressed viral load results (&lt;1000 copies/mL)\":\n  [\"Observation\": \"HIV 1 RNA NAA+probe (Specimen)\"] Observation\n    where Observation.value &lt; 1000 '{copies}/mL'\n\ndefine \"Living with HIV and on ART with unsuppressed viral load results (&gt;1000 copies/mL)\":\n  [\"Observation\": \"HIV 1 RNA NAA+probe (Specimen)\"] Observation\n    where Observation.value &gt;= 1000 '{copies}/mL'\n\ndefine \"Suppressed\":\n  [Observation: \"HIV 1 RNA NAA+probe (Specimen)\"] Observation\n    where Observation.value &lt; 1000 '{copies}/mL'\n\ndefine \"Unsuppressed\":\n  [Observation: \"HIV 1 RNA NAA+probe (Specimen)\"] Observation\n    where Observation.value &gt;= 1000 '{copies}/mL'\n\n\ndefine \"Contact date\":\n  [Encounter] E\n    return E.period.start\n\n\n// make a gender code for supp data\ndefine \"SDE Sex\":\n  case\n    when Patient.gender = 'male' then Code { code: 'M', system: 'http://hl7.org/fhir/v3/AdministrativeGender', display: 'Male' }\n    when Patient.gender = 'female' then Code { code: 'F', system: 'http://hl7.org/fhir/v3/AdministrativeGender', display: 'Female' }\n    else null\n  end\n\n/* first attempt at supp data for location */\n\n// hack to try pseudo-stratifier for location using supp data\ndefine function \"GetId\"(uri String):\n    Last(Split(uri, '/'))\n\ndefine function \"GetLocation\"(reference Reference):\n  singleton from (\n    [Location] Location where Location.id.value = GetId(reference.reference)\n  )\n\ndefine \"Location\":\n    First([Encounter] E return \"GetLocation\"(First(E.location).location))\n\n// not working for some reason\ndefine \"SDE Location\":\n    Code { code: \"Location\".name, system: 'https://github.com/synthetichealth/synthea' }\n\n/* second attempt at supp data for location*/\n\n/*\nMost recent encounter location\n*/\ndefine \"Most Recent Encounter Location Reference\":\n  Last(\n    [Encounter] E\n      return First(E.location L return L.location)\n      //sort by start of period\n  )\n\n/*\nLocation Code\n*/\ndefine \"Location Code\":\n singleton from (\n   [Location] L\n     let identifier: singleton from (L.identifier I where I.system = 'https://github.com/synthetichealth/synthea')\n     where L.id = Last(Split(\"Most Recent Encounter Location Reference\".reference, '/'))\n     return CodeableConcept {\n       coding: {\n         Coding {\n           code: code { value: identifier.value },\n           system: identifier.system\n         }\n       }\n     }\n )\n\ndefine \"Location Code Deux\":\nsingleton from (\n  [Location] L\n    let identifier: singleton from (L.identifier)\n    where L.id = Last(Split(\"Most Recent Encounter Location Reference\".reference, '/'))\n    return CodeableConcept {\n      coding: {\n        Coding {\n          code: code { value: identifier.value },\n          system: identifier.system\n        }\n      }\n    }\n)\n\n\n/* create clinical decision support logic */\n/*\ndefine \"HIVTestProposed\": ServiceRequest {\n type: Code '75622-1' from \"LOINC\"\n display 'HIV 1 and 2 tests - Meaningful Use set',\n status 'active'\n intent: 'proposal'\n // values for other elements of the request...\n}\n */\n</code></pre><p><code>No Content</code> (<code>application/elm+xml</code>)</p></div>"
  },
  "url": "https://github.com/intrahealth/simple-hiv-ig/Library/KitchenSink",
  "version": "0.1.0",
  "status": "draft",
  "experimental": true,
  "type": {
    "coding": [
      {
        "code": "logic-library"
      }
    ]
  },
  "date": "2021-07-14T04:00:58+00:00",
  "publisher": "IntraHealth International",
  "contact": [
    {
      "telecom": [
        {
          "system": "url",
          "value": "http://hl7.org/Special/committees/[something]"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "text/cql",
      "data": "bGlicmFyeSBLaXRjaGVuU2luayB2ZXJzaW9uICcwLjEuMCcKCnVzaW5nIEZISVIgdmVyc2lvbiAnNC4wLjEnCgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJwppbmNsdWRlIEZISVJDb21tb24gdmVyc2lvbiAnNC4wLjEnIGNhbGxlZCBGQwppbmNsdWRlIEFnZVJhbmdlcyB2ZXJzaW9uICcwLjEuMCcgY2FsbGVkIEFSCgovLyBTTk9NRUQtQ1QsIEludGVybmF0aW9uYWwgRWRpdGlvbgpjb2Rlc3lzdGVtICJTTk9NRUQtQ1QiOiAnaHR0cDovL3Nub21lZC5pbmZvL3NjdCcgdmVyc2lvbiAnaHR0cDovL3Nub21lZC5pbmZvL3NjdC85MDAwMDAwMDAwMDAyMDcwMDgnCi8vIExPSU5DLCAyLjYzKwpjb2Rlc3lzdGVtICJMT0lOQyI6ICdodHRwOi8vbG9pbmMub3JnJwoKLy8gQ29uZGl0aW9uT25zZXQ6IEhJViBpbmZlY3Rpb24sIHRoaXMgY29uZmxpY3RzIHdpdGggdGVzdCByZXN1bHQsIHNvIGlzIGJlIHJlbmFtZWQKY29kZSAiSElWIENvbmRpdGlvbiBQb3NpdGl2ZSI6ICc4NjQwNjAwOCcgZnJvbSAiU05PTUVELUNUIiBkaXNwbGF5ICdISVYgUG9zaXRpdmUnCmNvZGUgIkhJViAxIGFuZCAyIHRlc3RzIC0gTWVhbmluZ2Z1bCBVc2Ugc2V0IjogJzc1NjIyLTEnIGZyb20gIkxPSU5DIiBkaXNwbGF5ICdISVYgMSBhbmQgMiB0ZXN0cyAtIE1lYW5pbmdmdWwgVXNlIHNldCcKY29kZSAiUHJlZ25hbnQgKGZpbmRpbmcpIjogJzc3Mzg2MDA2JyBmcm9tICJTTk9NRUQtQ1QiIGRpc3BsYXkgJ1ByZWduYW50IChmaW5kaW5nKScKY29kZSAiSElWIDEgUk5BIE5BQStwcm9iZSAoU3BlY2ltZW4pIjogJzI1ODM2LTgnIGZyb20gIkxPSU5DIiBkaXNwbGF5ICdISVYgMSBSTkEgTkFBK3Byb2JlIChTcGVjaW1lbiknCgpjb250ZXh0IFBhdGllbnQKCmRlZmluZSAiU2V4IjoKICBQYXRpZW50LmdlbmRlcgoKZGVmaW5lICJTZXggVmFsdWUiOgogIFBhdGllbnQuZ2VuZGVyLnZhbHVlCgpkZWZpbmUgIkZlbWFsZSI6CiAgUGF0aWVudC5nZW5kZXIgPSAnZmVtYWxlJwoKZGVmaW5lICJNYWxlIjoKICBQYXRpZW50LmdlbmRlciA9ICdtYWxlJwoKZGVmaW5lICJBZ2UgR3JvdXAvU2V4IjoKICBBUi4iQWdlIEdyb3VwIi5jb2RlICsgJzonICsgIlNleCIKCgpkZWZpbmUgIkluaXRpYWwgUG9wdWxhdGlvbiI6CiAgdHJ1ZQoKZGVmaW5lICJEZW5vbWluYXRvciI6CiAgIlNleCIgaXMgbm90IG51bGwKCmRlZmluZSAiTnVtZXJhdG9yIjoKICAiU2V4IiA9ICdmZW1hbGUnCgpkZWZpbmUgIkhlbGxvLCBXb3JsZCEiOgogICdIZWxsbywgV29ybGQhJwoKLyogZGVmaW5lICJiaXJ0aERhdGUiOiBQYXRpZW50LmJpcnRoRGF0ZSAqLwpkZWZpbmUgImJpcnRoRGF0ZV9zdHIiOgogIFRvU3RyaW5nKFBhdGllbnQuYmlydGhEYXRlKQoKLyogZGVmaW5lICJHaXZlbiBOYW1lIHN0ciI6IFBhdGllbnQubmFtZS5naXZlblswXSAqLwpkZWZpbmUgIkdpdmVuIE5hbWUiOgogIFBhdGllbnQubmFtZS5naXZlblswXS52YWx1ZQoKLyogZGVmaW5lICJGYW1pbHkgTmFtZSBzdHIiOiBQYXRpZW50Lm5hbWUuZmFtaWx5WzBdICovCmRlZmluZSAiRmFtaWx5IE5hbWUiOgogIFBhdGllbnQubmFtZS5mYW1pbHlbMF0udmFsdWUKCi8vIHdvcmtzIGluIGZzaApkZWZpbmUgIkhJViBDb25kaXRpb24iOgogIGV4aXN0cyBbIkNvbmRpdGlvbiI6ICJISVYgQ29uZGl0aW9uIFBvc2l0aXZlIl0KCmRlZmluZSAiSXMgSElWIFBvc2l0aXZlIjoKICAiSElWIENvbmRpdGlvbiIKCmRlZmluZSAiSXMgSElWIE5lZ2F0aXZlIjoKICBub3QgIkhJViBDb25kaXRpb24iCgoKZGVmaW5lICJQcmVnbmFudCI6CiAgZXhpc3RzIFsiQ29uZGl0aW9uIjogIlByZWduYW50IChmaW5kaW5nKSJdCgpkZWZpbmUgIlZpcmFsIExvYWQgVGVzdCBSZXN1bHQiOgogIFsiT2JzZXJ2YXRpb24iOiAiSElWIDEgUk5BIE5BQStwcm9iZSAoU3BlY2ltZW4pIl0gT2JzCiAgICB3aGVyZSBPYnMuc3RhdHVzID0gJ2ZpbmFsJwogICAgICBhbmQgT2JzLnZhbHVlIGlzIG5vdCBudWxsCgoKZGVmaW5lICJISVYgVGVzdCBFeGlzdHMiOgogIGV4aXN0cyAoW09ic2VydmF0aW9uOiAiSElWIDEgYW5kIDIgdGVzdHMgLSBNZWFuaW5nZnVsIFVzZSBzZXQiXSkKCmRlZmluZSAiSElWIFBvc2l0aXZlIE9ic2VydmF0aW9uIjoKICBbT2JzZXJ2YXRpb246ICJISVYgMSBhbmQgMiB0ZXN0cyAtIE1lYW5pbmdmdWwgVXNlIHNldCJdIE9ic2VydmF0aW9uCiAgICB3aGVyZSBPYnNlcnZhdGlvbi52YWx1ZSA9ICJJcyBISVYgUG9zaXRpdmUiCgpkZWZpbmUgIkhJViBOZWdhdGl2ZSBPYnNlcnZhdGlvbiI6CiAgW09ic2VydmF0aW9uOiAiSElWIDEgYW5kIDIgdGVzdHMgLSBNZWFuaW5nZnVsIFVzZSBzZXQiXSBPYnNlcnZhdGlvbgogICAgd2hlcmUgT2JzZXJ2YXRpb24udmFsdWUgPSAiSXMgSElWIE5lZ2F0aXZlIgoKLy8gYWx3YXlzIG51bGwKZGVmaW5lICJISVYgVGVzdCBSZXN1bHRzIjoKICBjYXNlCiAgICB3aGVuICJJcyBISVYgUG9zaXRpdmUiIHRoZW4gIkhJViBQb3NpdGl2ZSIKICAgIHdoZW4gIklzIEhJViBOZWdhdGl2ZSIgdGhlbiAiSElWIE5lZ2F0aXZlIgogICAgZWxzZSBudWxsCiAgZW5kCgovLyBhbHdheXMgbnVsbApkZWZpbmUgIkFnZSBHcm91cC9TZXgvSElWIFRlc3QgUmVzdWx0cyI6CiAgQVIuIkFnZSBHcm91cCIuY29kZSArICc6JyArICJTZXgiICsgJzonICsgIkhJViBUZXN0IFJlc3VsdHMiLmNvZGUKCgovLyBzeW50aGVhIHVzZXMgY29waWVzL21MIGJ1dCBmc2ggdXNlcyB7Y29waWVzfS9tTCB3aGljaCBpcyBvZmZpY2lhbApkZWZpbmUgIkxpdmluZyB3aXRoIEhJViBhbmQgb24gQVJUIHdpdGggc3VwcHJlc3NlZCB2aXJhbCBsb2FkIHJlc3VsdHMgKDwxMDAwIGNvcGllcy9tTCkiOgogIFsiT2JzZXJ2YXRpb24iOiAiSElWIDEgUk5BIE5BQStwcm9iZSAoU3BlY2ltZW4pIl0gT2JzZXJ2YXRpb24KICAgIHdoZXJlIE9ic2VydmF0aW9uLnZhbHVlIDwgMTAwMCAne2NvcGllc30vbUwnCgpkZWZpbmUgIkxpdmluZyB3aXRoIEhJViBhbmQgb24gQVJUIHdpdGggdW5zdXBwcmVzc2VkIHZpcmFsIGxvYWQgcmVzdWx0cyAoPjEwMDAgY29waWVzL21MKSI6CiAgWyJPYnNlcnZhdGlvbiI6ICJISVYgMSBSTkEgTkFBK3Byb2JlIChTcGVjaW1lbikiXSBPYnNlcnZhdGlvbgogICAgd2hlcmUgT2JzZXJ2YXRpb24udmFsdWUgPj0gMTAwMCAne2NvcGllc30vbUwnCgpkZWZpbmUgIlN1cHByZXNzZWQiOgogIFtPYnNlcnZhdGlvbjogIkhJViAxIFJOQSBOQUErcHJvYmUgKFNwZWNpbWVuKSJdIE9ic2VydmF0aW9uCiAgICB3aGVyZSBPYnNlcnZhdGlvbi52YWx1ZSA8IDEwMDAgJ3tjb3BpZXN9L21MJwoKZGVmaW5lICJVbnN1cHByZXNzZWQiOgogIFtPYnNlcnZhdGlvbjogIkhJViAxIFJOQSBOQUErcHJvYmUgKFNwZWNpbWVuKSJdIE9ic2VydmF0aW9uCiAgICB3aGVyZSBPYnNlcnZhdGlvbi52YWx1ZSA+PSAxMDAwICd7Y29waWVzfS9tTCcKCgpkZWZpbmUgIkNvbnRhY3QgZGF0ZSI6CiAgW0VuY291bnRlcl0gRQogICAgcmV0dXJuIEUucGVyaW9kLnN0YXJ0CgoKLy8gbWFrZSBhIGdlbmRlciBjb2RlIGZvciBzdXBwIGRhdGEKZGVmaW5lICJTREUgU2V4IjoKICBjYXNlCiAgICB3aGVuIFBhdGllbnQuZ2VuZGVyID0gJ21hbGUnIHRoZW4gQ29kZSB7IGNvZGU6ICdNJywgc3lzdGVtOiAnaHR0cDovL2hsNy5vcmcvZmhpci92My9BZG1pbmlzdHJhdGl2ZUdlbmRlcicsIGRpc3BsYXk6ICdNYWxlJyB9CiAgICB3aGVuIFBhdGllbnQuZ2VuZGVyID0gJ2ZlbWFsZScgdGhlbiBDb2RlIHsgY29kZTogJ0YnLCBzeXN0ZW06ICdodHRwOi8vaGw3Lm9yZy9maGlyL3YzL0FkbWluaXN0cmF0aXZlR2VuZGVyJywgZGlzcGxheTogJ0ZlbWFsZScgfQogICAgZWxzZSBudWxsCiAgZW5kCgovKiBmaXJzdCBhdHRlbXB0IGF0IHN1cHAgZGF0YSBmb3IgbG9jYXRpb24gKi8KCi8vIGhhY2sgdG8gdHJ5IHBzZXVkby1zdHJhdGlmaWVyIGZvciBsb2NhdGlvbiB1c2luZyBzdXBwIGRhdGEKZGVmaW5lIGZ1bmN0aW9uICJHZXRJZCIodXJpIFN0cmluZyk6CiAgICBMYXN0KFNwbGl0KHVyaSwgJy8nKSkKCmRlZmluZSBmdW5jdGlvbiAiR2V0TG9jYXRpb24iKHJlZmVyZW5jZSBSZWZlcmVuY2UpOgogIHNpbmdsZXRvbiBmcm9tICgKICAgIFtMb2NhdGlvbl0gTG9jYXRpb24gd2hlcmUgTG9jYXRpb24uaWQudmFsdWUgPSBHZXRJZChyZWZlcmVuY2UucmVmZXJlbmNlKQogICkKCmRlZmluZSAiTG9jYXRpb24iOgogICAgRmlyc3QoW0VuY291bnRlcl0gRSByZXR1cm4gIkdldExvY2F0aW9uIihGaXJzdChFLmxvY2F0aW9uKS5sb2NhdGlvbikpCgovLyBub3Qgd29ya2luZyBmb3Igc29tZSByZWFzb24KZGVmaW5lICJTREUgTG9jYXRpb24iOgogICAgQ29kZSB7IGNvZGU6ICJMb2NhdGlvbiIubmFtZSwgc3lzdGVtOiAnaHR0cHM6Ly9naXRodWIuY29tL3N5bnRoZXRpY2hlYWx0aC9zeW50aGVhJyB9CgovKiBzZWNvbmQgYXR0ZW1wdCBhdCBzdXBwIGRhdGEgZm9yIGxvY2F0aW9uKi8KCi8qCk1vc3QgcmVjZW50IGVuY291bnRlciBsb2NhdGlvbgoqLwpkZWZpbmUgIk1vc3QgUmVjZW50IEVuY291bnRlciBMb2NhdGlvbiBSZWZlcmVuY2UiOgogIExhc3QoCiAgICBbRW5jb3VudGVyXSBFCiAgICAgIHJldHVybiBGaXJzdChFLmxvY2F0aW9uIEwgcmV0dXJuIEwubG9jYXRpb24pCiAgICAgIC8vc29ydCBieSBzdGFydCBvZiBwZXJpb2QKICApCgovKgpMb2NhdGlvbiBDb2RlCiovCmRlZmluZSAiTG9jYXRpb24gQ29kZSI6CiBzaW5nbGV0b24gZnJvbSAoCiAgIFtMb2NhdGlvbl0gTAogICAgIGxldCBpZGVudGlmaWVyOiBzaW5nbGV0b24gZnJvbSAoTC5pZGVudGlmaWVyIEkgd2hlcmUgSS5zeXN0ZW0gPSAnaHR0cHM6Ly9naXRodWIuY29tL3N5bnRoZXRpY2hlYWx0aC9zeW50aGVhJykKICAgICB3aGVyZSBMLmlkID0gTGFzdChTcGxpdCgiTW9zdCBSZWNlbnQgRW5jb3VudGVyIExvY2F0aW9uIFJlZmVyZW5jZSIucmVmZXJlbmNlLCAnLycpKQogICAgIHJldHVybiBDb2RlYWJsZUNvbmNlcHQgewogICAgICAgY29kaW5nOiB7CiAgICAgICAgIENvZGluZyB7CiAgICAgICAgICAgY29kZTogY29kZSB7IHZhbHVlOiBpZGVudGlmaWVyLnZhbHVlIH0sCiAgICAgICAgICAgc3lzdGVtOiBpZGVudGlmaWVyLnN5c3RlbQogICAgICAgICB9CiAgICAgICB9CiAgICAgfQogKQoKZGVmaW5lICJMb2NhdGlvbiBDb2RlIERldXgiOgpzaW5nbGV0b24gZnJvbSAoCiAgW0xvY2F0aW9uXSBMCiAgICBsZXQgaWRlbnRpZmllcjogc2luZ2xldG9uIGZyb20gKEwuaWRlbnRpZmllcikKICAgIHdoZXJlIEwuaWQgPSBMYXN0KFNwbGl0KCJNb3N0IFJlY2VudCBFbmNvdW50ZXIgTG9jYXRpb24gUmVmZXJlbmNlIi5yZWZlcmVuY2UsICcvJykpCiAgICByZXR1cm4gQ29kZWFibGVDb25jZXB0IHsKICAgICAgY29kaW5nOiB7CiAgICAgICAgQ29kaW5nIHsKICAgICAgICAgIGNvZGU6IGNvZGUgeyB2YWx1ZTogaWRlbnRpZmllci52YWx1ZSB9LAogICAgICAgICAgc3lzdGVtOiBpZGVudGlmaWVyLnN5c3RlbQogICAgICAgIH0KICAgICAgfQogICAgfQopCgoKLyogY3JlYXRlIGNsaW5pY2FsIGRlY2lzaW9uIHN1cHBvcnQgbG9naWMgKi8KLyoKZGVmaW5lICJISVZUZXN0UHJvcG9zZWQiOiBTZXJ2aWNlUmVxdWVzdCB7CiB0eXBlOiBDb2RlICc3NTYyMi0xJyBmcm9tICJMT0lOQyIKIGRpc3BsYXkgJ0hJViAxIGFuZCAyIHRlc3RzIC0gTWVhbmluZ2Z1bCBVc2Ugc2V0JywKIHN0YXR1cyAnYWN0aXZlJwogaW50ZW50OiAncHJvcG9zYWwnCiAvLyB2YWx1ZXMgZm9yIG90aGVyIGVsZW1lbnRzIG9mIHRoZSByZXF1ZXN0Li4uCn0KICovCg=="
    },
    {
      "contentType": "application/elm+xml"
    }
  ]
}